name: CI
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*'
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: 1.13
      - name: Check out project files
        uses: actions/checkout@v2
      - name: Build
        run: make
  itest:
    name: Run itests on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: 1.13
      - name: Checkout project files
        uses: actions/checkout@v2
        with:
          path: main
      - name: Checkout quorum-signer Vault plugin
        uses: actions/checkout@v2
        with:
          repository: ConsenSys/quorum-signer-plugin-for-hashicorp-vault
          path: quorum-signer
      - name: Checkout quorum
        uses: actions/checkout@v2
        with:
          repository: ConsenSys/quorum
          path: quorum
      - name: Build quorum-signer Vault plugin
        run: |
          pushd quorum-signer
          go mod tidy
          make
          ls build
          popd
      - name: Build quorum and clef
        run: |
          mkdir -p $(go env GOPATH)/ethereum/go-ethereum
          cp -a quorum/. $(go env GOPATH)/ethereum/go-ethereum/
          pushd $(go env GOPATH)/ethereum/go-ethereum
          make all
          ls build/bin
          echo "$(go env GOPATH)/ethereum/go-ethereum/build/bin" >> $GITHUB_PATH
          popd
      - if: matrix.os == 'ubuntu-latest'
        name: Install vault CLI (ubuntu)
        run: |
          wget https://releases.hashicorp.com/vault/1.6.0/vault_1.6.0_linux_amd64.zip -O /tmp/vault_1.6.0_linux_amd64.zip
          mkdir -p vault/bin
          pushd vault/bin
          unzip /tmp/vault_1.6.0_linux_amd64.zip
          echo "${PWD}" >> $GITHUB_PATH
          popd
      - if: matrix.os == 'macos-latest'
        name: Install vault CLI (macos)
        run: |
          wget https://releases.hashicorp.com/vault/1.6.0/vault_1.6.0_darwin_amd64.zip -O /tmp/vault_1.6.0_darwin_amd64.zip
          mkdir -p vault/bin
          pushd vault/bin
          unzip /tmp/vault_1.6.0_darwin_amd64.zip
          echo "${PWD}" >> $GITHUB_PATH
          popd
      - name: Run itests
        env:
          PLUGIN_DIST: ${{ github.workspace }}/main/build/dist
          PLUGIN_VERSION: 0.2.0-SNAPSHOT
          VAULT_SIGNER_DIR: ${{ github.workspace }}/quorum-signer/build
          VAULT_SIGNER_NAME: quorum-signer-0.1.0-SNAPSHOT
        run: |
          set -x
          geth version
          clef -v
          vault -v
          ls quorum-signer/build
          set +x
          make -C main itest
      - if: ${{ failure() }}
        name: Upload test output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-testout
          path: main/internal/test/integration/testout/